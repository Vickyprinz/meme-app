{"ast":null,"code":"var _jsxFileName = \"/home/victor/phase-3/memeapp/client/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meme = () => {\n  _s();\n  const [memes, setMemes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://127.0.0.1:9292/memes\");\n      const jsonData = await response.json();\n      setMemes(jsonData);\n    };\n    fetchData();\n  }, []);\n  const [selectedMeme, setSelectedMeme] = useState(null);\n  const [text, setText] = useState('');\n  const [generatedMeme, setGeneratedMeme] = useState(null);\n  const handleMemeSelect = event => {\n    const id = event.target.value;\n    const meme = memes.find(meme => meme.id === id);\n    setSelectedMeme(meme);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const options = {\n      method: 'POST',\n      url: 'https://api.imgflip.com/caption_image',\n      data: {\n        template_id: selectedMeme.id,\n        username: 'vickyprinz',\n        password: '0794262715',\n        text0: text,\n        text1: text\n      }\n    };\n    try {\n      const response = await axios.request(options);\n      setGeneratedMeme(response.data.data.url);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const allMemes = memes.map(meme => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white p-4 mt-5 bg-slate-400 border ml-20  rounded-xl shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-900 font-bold\",\n          children: \"title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), \" \", meme.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-900 font-bold\",\n          children: \"punchline: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), meme.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, meme.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: allMemes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Meme Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleMemeSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a meme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), memes.map(meme => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: meme.id,\n            children: meme.name\n          }, meme.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter top text\",\n          value: text,\n          onChange: event => setText(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !selectedMeme,\n          children: \"Generate Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), generatedMeme && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: generatedMeme,\n          alt: \"Generated Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Meme, \"tItiG5S/+H/KbQPH3Qr6+xp7JyQ=\");\n_c = Meme;\nexport default Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Meme","_s","memes","setMemes","fetchData","response","fetch","jsonData","json","selectedMeme","setSelectedMeme","text","setText","generatedMeme","setGeneratedMeme","handleMemeSelect","event","id","target","value","meme","find","handleSubmit","preventDefault","options","method","url","data","template_id","username","password","text0","text1","request","error","console","allMemes","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","message","onSubmit","onChange","name","type","placeholder","disabled","src","alt","_c","$RefreshReg$"],"sources":["/home/victor/phase-3/memeapp/client/src/components/Meme.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\n\nconst Meme = () => {\n  const [memes, setMemes] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://127.0.0.1:9292/memes\");\n      const jsonData = await response.json();\n      setMemes(jsonData);\n    };\n\n    fetchData();\n  }, []);\n\n  const [selectedMeme, setSelectedMeme] = useState(null);\n  const [text, setText] = useState('');\n  const [generatedMeme, setGeneratedMeme] = useState(null);\n\n  const handleMemeSelect = (event) => {\n    const id = event.target.value;\n    const meme = memes.find((meme) => meme.id === id);\n    setSelectedMeme(meme);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const options = {\n      method: 'POST',\n      url: 'https://api.imgflip.com/caption_image',\n      data: {\n        template_id: selectedMeme.id,\n        username: 'vickyprinz',\n        password: '0794262715',\n        text0: text,\n        text1: text\n      }\n    };\n\n    try {\n      const response = await axios.request(options);\n      setGeneratedMeme(response.data.data.url);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const allMemes = memes.map((meme) => {\n    return (\n      <div\n        key={meme.id}\n        className=\"text-white p-4 mt-5 bg-slate-400 border ml-20  rounded-xl shadow\"\n      >\n        <p className=\"\">\n          {\" \"}\n          <span className=\"text-gray-900 font-bold\">title: </span>{\" \"}\n          {meme.title}{\" \"}\n        </p>\n        <p className=\"\">\n          {\" \"}\n          <span className=\"text-gray-900 font-bold\">punchline: </span>\n          {meme.message}{\" \"}\n        </p>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"grid grid-cols-2\">\n      <div className=\"\">\n        {allMemes}\n      </div>\n      <div>\n        <h2>Meme Generator</h2>\n        <form onSubmit={handleSubmit}>\n          <select onChange={handleMemeSelect}>\n            <option value=\"\">Select a meme</option>\n            {memes.map((meme) => (\n              <option key={meme.id} value={meme.id}>\n                {meme.name}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"text\"\n            placeholder=\"Enter top text\"\n            value={text}\n            onChange={(event) => setText(event.target.value)}\n          />\n          <button type=\"submit\" disabled={!selectedMeme}>\n            Generate Meme\n          </button>\n        </form>\n        {generatedMeme && (\n          <div>\n            <img src={generatedMeme} alt=\"Generated Meme\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Meme;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}