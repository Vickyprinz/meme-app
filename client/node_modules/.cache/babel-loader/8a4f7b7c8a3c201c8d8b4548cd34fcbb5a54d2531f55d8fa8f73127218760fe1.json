{"ast":null,"code":"var _s = $RefreshSig$();\nimport Add_post from \"./Add_post\";\nimport { useState, useEffect } from \"react\";\nconst Meme = () => {\n  _s();\n  const [Memes, setMemes] = useState([]);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch('');\n        const userData = await response.json();\n        console.log(userData);\n        setUserData(userData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchUserData();\n  }, []);\n};\n_s(Meme, \"FE6VOgOx78lzXu7Ckkkep818koA=\");\n_c = Meme;\nexport default Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["Add_post","useState","useEffect","Meme","_s","Memes","setMemes","fetchUserData","response","fetch","userData","json","console","log","setUserData","error","_c","$RefreshReg$"],"sources":["/home/victor/phase-3/memeapp/client/src/components/Meme.js"],"sourcesContent":["import Add_post from \"./Add_post\";\nimport {useState, useEffect} from \"react\";\n\nconst Meme = () => {\n  const [Memes, setMemes] = useState([])\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch('');\n        const userData = await response.json();\n        console.log(userData);\n        setUserData(userData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  \n    fetchUserData();\n  }, []);\n  \n}\nexport default Meme"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEzC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,EAAE,CAAC;QAChC,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QACtCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QACrBI,WAAW,CAACJ,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDR,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;AAER,CAAC;AAAAH,EAAA,CAlBKD,IAAI;AAAAa,EAAA,GAAJb,IAAI;AAmBV,eAAeA,IAAI;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}