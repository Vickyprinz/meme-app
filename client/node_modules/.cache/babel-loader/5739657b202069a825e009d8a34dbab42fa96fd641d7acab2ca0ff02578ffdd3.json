{"ast":null,"code":"var _jsxFileName = \"/home/victor/phase-3/memeapp/client/src/components/Meme.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Addpost from \"./Addpost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meme = () => {\n  _s();\n  const [memes, setMemes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://127.0.0.1:9292/memes\");\n      const jsonData = await response.json();\n      setMemes(jsonData);\n    };\n    fetchData();\n  }, []);\n  const allMemes = memes.map(meme => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white p-4 mt-5 bg-slate-400 border ml-20  rounded-xl shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-900 font-bold\",\n          children: \"title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), \" \", meme.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-900 font-bold\",\n          children: \"punchline: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), meme.message, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, meme.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: allMemes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Addpost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Meme, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n_c = Meme;\nexport default Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["axios","React","useState","useEffect","Addpost","jsxDEV","_jsxDEV","Meme","_s","memes","setMemes","fetchData","response","fetch","jsonData","json","allMemes","map","meme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","message","id","_c","$RefreshReg$"],"sources":["/home/victor/phase-3/memeapp/client/src/components/Meme.js"],"sourcesContent":["import axios from \"axios\"\nimport React, { useState, useEffect } from \"react\";\nimport Addpost from \"./Addpost\";\n\nconst Meme = () => {\n  const [memes, setMemes] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://127.0.0.1:9292/memes\");\n      const jsonData = await response.json();\n      setMemes(jsonData);\n    };\n\n    fetchData();\n  }, []);\n\n  const allMemes = memes.map((meme) => {\n    return (\n      <div\n        key={meme.id}\n        className=\"text-white p-4 mt-5 bg-slate-400 border ml-20  rounded-xl shadow\"\n      >\n        <p className=\"\">\n          {\" \"}\n          <span className=\"text-gray-900 font-bold\">title: </span>{\" \"}\n          {meme.title}{\" \"}\n        </p>\n        <p className=\"\">\n          {\" \"}\n          <span className=\"text-gray-900 font-bold\">punchline: </span>\n          {meme.message}{\" \"}\n        </p>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"grid grid-cols-2\">\n      <div className=\"\">\n        {allMemes}\n      </div>\n      <Addpost />\n    </div>\n  );\n};\n\nexport default Meme;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MACtCL,QAAQ,CAACI,QAAQ,CAAC;IACpB,CAAC;IAEDH,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,QAAQ,GAAGP,KAAK,CAACQ,GAAG,CAAEC,IAAI,IAAK;IACnC,oBACEZ,OAAA;MAEEa,SAAS,EAAC,kEAAkE;MAAAC,QAAA,gBAE5Ed,OAAA;QAAGa,SAAS,EAAC,EAAE;QAAAC,QAAA,GACZ,GAAG,eACJd,OAAA;UAAMa,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,EAAC,GAAG,EAC3DN,IAAI,CAACO,KAAK,EAAE,GAAG;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd,eACJlB,OAAA;QAAGa,SAAS,EAAC,EAAE;QAAAC,QAAA,GACZ,GAAG,eACJd,OAAA;UAAMa,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,EAC3DN,IAAI,CAACQ,OAAO,EAAE,GAAG;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChB;IAAA,GAZCN,IAAI,CAACS,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAaR;EAEV,CAAC,CAAC;EAEF,oBACElB,OAAA;IAAKa,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/Bd,OAAA;MAAKa,SAAS,EAAC,EAAE;MAAAC,QAAA,EACdJ;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNlB,OAAA,CAACF,OAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEV,CAAC;AAAChB,EAAA,CAzCID,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA2CV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}