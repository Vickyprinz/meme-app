{"ast":null,"code":"var _jsxFileName = \"/home/victor/phase-3/memeapp/client/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport Home from \"./Home\";\nimport Signup from \"./Signup\";\nimport Usermemes from \"./Usermemes\";\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [memes, setMemes] = useState([]);\n  const [userMemes, setUserMemes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const navigate = useNavigate();\n\n  // login user\n  const handleLogin = e => {\n    e.preventDefault();\n    const form = e.target;\n    const formData = new FormData(form);\n    fetch(\"http://127.0.0.1:9292/login\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error(\"Network error.\");\n      }\n    }).then(data => {\n      setIsAuthenticated(true);\n      setUsername(data.username);\n      setUserId(data.userId);\n      navigate(\"/memes\");\n    }).catch(error => {\n      console.error(\"There was a problem with the fetch operation:\", error);\n    });\n  };\n  const handleLogout = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:9292/logout\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (response.ok) {\n        setIsAuthenticated(false);\n        navigate(\"/\");\n      } else {\n        throw new Error(\"Failed to logout\");\n      }\n    }).catch(error => console.error(error));\n  };\n\n  // fetch all memes\n  useEffect(() => {\n    fetch(\"http://localhost:9292/memes\").then(r => r.json()).then(response => setMemes(response.memes));\n  }, []);\n\n  // fetch memes of authenticated user\n  useEffect(() => {\n    fetch(`http://localhost:9292/usermemes/${userId}`).then(response => response.json()).then(data => {\n      setUserMemes(data.memes);\n    }).catch(error => console.error(error));\n  }, [userId]);\n  const handleSearchChange = value => {\n    setSearch(value);\n  };\n  const displayedMemes = memes.filter(meme => meme.title.toLowerCase().includes(search.toLowerCase()));\n  const renderUsermemes = () => {\n    if (isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Usermemes, {\n        userId: userId,\n        userMemes: userMemes,\n        setUserMemes: setUserMemes,\n        handleDeleteMeme: handleDeleteMeme,\n        handleAddMeme: handleAddMeme,\n        handleUpdateMeme: handleUpdateMeme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    } else {\n      navigate(\"/login\");\n    }\n  };\n  function handleDeleteMeme(id) {\n    const updatedMemes = userMemes.filter(meme => meme.id !== id);\n    setUserMemes(updatedMemes);\n  }\n  function handleAddMeme(newMeme) {\n    setUserMemes([...userMemes, newMeme]);\n  }\n  function handleUpdateMeme(updatedMemeObj) {\n    const updatedMemes = userMemes.map(message => {\n      if (message.id === updatedMemeObj.id) {\n        return updatedMemeObj;\n      } else {\n        return message;\n      }\n    });\n    setUserMemes(updatedMemes);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isAuthenticated: isAuthenticated,\n      handleLogout: handleLogout,\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          setIsAuthenticated: setIsAuthenticated,\n          isAuthenticated: isAuthenticated,\n          handleLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {\n          setIsAuthenticated: setIsAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 12\n      }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/memes\",\n          element: /*#__PURE__*/_jsxDEV(Memes, {\n            memes: displayedMemes,\n            displayedMemes: displayedMemes,\n            handleSearchChange: handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/usermemes\",\n          element: Usermemes()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wKQimux1YAU+5NFC1iwL7JGLfUA=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","useNavigate","React","useState","useEffect","Home","Signup","Usermemes","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","username","setUsername","userId","setUserId","memes","setMemes","userMemes","setUserMemes","search","setSearch","navigate","handleLogin","e","preventDefault","form","target","formData","FormData","fetch","method","body","then","response","ok","json","Error","data","catch","error","console","handleLogout","headers","r","handleSearchChange","value","displayedMemes","filter","meme","title","toLowerCase","includes","renderUsermemes","handleDeleteMeme","handleAddMeme","handleUpdateMeme","fileName","_jsxFileName","lineNumber","columnNumber","id","updatedMemes","newMeme","updatedMemeObj","map","message","className","children","path","element","Memes","_c","$RefreshReg$"],"sources":["/home/victor/phase-3/memeapp/client/src/components/App.js"],"sourcesContent":["import { Routes, Route, useNavigate } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport Home from \"./Home\";\nimport Signup from \"./Signup\";\nimport Usermemes from \"./Usermemes\";\nimport Navbar from \"./Navbar\";\n\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [memes, setMemes] = useState([]);\n  const [userMemes, setUserMemes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  // login user\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    const formData = new FormData(form);\n\n    fetch(\"http://127.0.0.1:9292/login\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Network error.\");\n        }\n      })\n      .then((data) => {\n        setIsAuthenticated(true);\n        setUsername(data.username);\n        setUserId(data.userId);\n        navigate(\"/memes\");\n      })\n      .catch((error) => {\n        console.error(\"There was a problem with the fetch operation:\", error);\n      });\n  };\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:9292/logout\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          setIsAuthenticated(false);\n          navigate(\"/\");\n        } else {\n          throw new Error(\"Failed to logout\");\n        }\n      })\n      .catch((error) => console.error(error));\n  };\n\n  // fetch all memes\n  useEffect(() => {\n    fetch(\"http://localhost:9292/memes\")\n      .then((r) => r.json())\n      .then((response) => setMemes(response.memes));\n  }, []);\n\n  // fetch memes of authenticated user\n  useEffect(() => {\n    fetch(`http://localhost:9292/usermemes/${userId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUserMemes(data.memes);\n      })\n      .catch((error) => console.error(error));\n  }, [userId]);\n\n  const handleSearchChange = (value) => {\n    setSearch(value);\n  };\n\n  const displayedMemes = memes.filter((meme) =>\n    meme.title.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const renderUsermemes = () => {\n    if (isAuthenticated) {\n      return (\n        <Usermemes\n          userId={userId}\n          userMemes={userMemes}\n          setUserMemes={setUserMemes}\n          handleDeleteMeme={handleDeleteMeme}\n          handleAddMeme={handleAddMeme}\n          handleUpdateMeme={handleUpdateMeme}\n        />\n      );\n    } else {\n      navigate(\"/login\");\n    }\n  };\n\n  function handleDeleteMeme(id) {\n    const updatedMemes = userMemes.filter((meme) => meme.id !== id);\n    setUserMemes(updatedMemes);\n  }\n\n  function handleAddMeme(newMeme) {\n    setUserMemes([...userMemes, newMeme]);\n  }\n\n  function handleUpdateMeme(updatedMemeObj) {\n    const updatedMemes = userMemes.map((message) => {\n      if (message.id === updatedMemeObj.id) {\n        return updatedMemeObj;\n      } else {\n        return message;\n      }\n    });\n    setUserMemes(updatedMemes);\n  }\n  \n\n  return (\n    <div className=\"\">\n      \n        <Navbar isAuthenticated={isAuthenticated} handleLogout={handleLogout} username={username} />\n        \n        <Routes>\n           <Route path=\"/\" element={<Home setIsAuthenticated={setIsAuthenticated}  isAuthenticated={isAuthenticated} handleLogin={handleLogin}/>} />\n           <Route path=\"/signup\" element={<Signup setIsAuthenticated={setIsAuthenticated}  />} />\n           {isAuthenticated && (\n            <>\n              <Route path=\"/memes\" element={<Memes memes={displayedMemes} displayedMemes={displayedMemes} handleSearchChange={handleSearchChange}/>} />\n              <Route path=\"/usermemes\" element={Usermemes()}/>\n            </>\n           )}\n        </Routes>\n   </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}