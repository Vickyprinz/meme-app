{"ast":null,"code":"var _jsxFileName = \"/home/victor/phase-3/memeapp/client/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport Usermemes from \"./Usermemes\";\nimport Signup from './Signup';\nimport Memes from './Memes';\n// import Usermeme from './Usermemes'\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState('');\n  const [memes, setMemes] = useState([]);\n  const [userMemes, setUserMemes] = useState([]);\n  const [userId, setUserId] = useState('');\n  const navigate = useNavigate();\n  console.log(userMemes);\n\n  // login user\n  const handleLogin = e => {\n    e.preventDefault();\n    const form = e.target;\n    const formData = new FormData(form);\n    fetch('http://127.0.0.1:9292/login', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Network is not ok.');\n      }\n    }).then(data => {\n      setIsAuthenticated(true);\n      setUsername(data.username);\n      setUserId(data.userId);\n      navigate('/memes');\n    }).catch(error => {\n      console.error('fetch operation error:', error);\n    });\n  };\n  console.log(userId);\n  const handleLogout = e => {\n    e.preventDefault();\n    fetch('http://localhost:9292/logout', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        setIsAuthenticated(false);\n        navigate('/');\n      } else {\n        throw new Error('Failed to logout');\n      }\n    }).catch(error => console.error(error));\n  };\n  useEffect(() => {\n    fetch('http://localhost:9292/memes').then(response => response.json()).then(data => {\n      setMemes(data.memes);\n      setUserMemes(data.user_memes);\n    }).catch(error => console.log(error));\n  }, []);\n  function handleDeleteMemes(id) {\n    const updatedMemes = userMemes.filter(meme => meme.id !== id);\n    console.log('delete message');\n    setUserMemes(updatedMemes);\n  }\n  function handleAddMemes(newUserMeme) {\n    setUserMemes([...userMemes, newUserMeme]);\n  }\n  function handleUpdateMeme(updatedMemeObj) {\n    const updatedMemes = userMemes.map(meme => {\n      if (meme.id === updatedMemeObj.id) {\n        return updatedMemeObj;\n      } else {\n        return meme;\n      }\n    });\n    setUserMemes(updatedMemes);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-600 h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isAuthenticated: isAuthenticated,\n      handleLogout: handleLogout,\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          setIsAuthenticated: setIsAuthenticated,\n          handleLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {\n          setIsAuthenticated: setIsAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shelf\",\n          element: /*#__PURE__*/_jsxDEV(Usermeme, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/allmemes\",\n          element: /*#__PURE__*/_jsxDEV(Memes, {\n            memes: memes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/mymemes\",\n          element: /*#__PURE__*/_jsxDEV(Usermemes, {\n            userMemes: userMemes,\n            handleDeleteMemes: handleDeleteMemes,\n            handleAddMemes: handleAddMemes,\n            handleUpdateMeme: handleUpdateMeme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2bzcYk1GPnKA1gRNfIEV8ezVFPA=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navbar","Home","Usermemes","Signup","Memes","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","username","setUsername","memes","setMemes","userMemes","setUserMemes","userId","setUserId","navigate","console","log","handleLogin","e","preventDefault","form","target","formData","FormData","fetch","method","body","then","response","ok","json","Error","data","catch","error","handleLogout","headers","user_memes","handleDeleteMemes","id","updatedMemes","filter","meme","handleAddMemes","newUserMeme","handleUpdateMeme","updatedMemeObj","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Usermeme","_c","$RefreshReg$"],"sources":["/home/victor/phase-3/memeapp/client/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from \"./Navbar\";\nimport Home from \"./Home\";\nimport Usermemes from \"./Usermemes\"\nimport Signup from './Signup';\nimport Memes from './Memes';\n// import Usermeme from './Usermemes'\nimport { useNavigate } from 'react-router-dom';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState('');\n  const [memes, setMemes] = useState([]);\n  const [userMemes, setUserMemes] = useState([]);\nconst [userId, setUserId] = useState ('')\n  const navigate = useNavigate();\n\n  console.log(userMemes);\n\n  // login user\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    const formData = new FormData(form);\n\n    fetch('http://127.0.0.1:9292/login', {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Network is not ok.');\n        }\n      })\n      .then((data) => {\n        setIsAuthenticated(true);\n        setUsername(data.username);\n        setUserId(data.userId)\n        navigate('/memes');\n      })\n      .catch((error) => {\n        console.error('fetch operation error:', error);\n      });\n  };\nconsole.log(userId)\n  const handleLogout = (e) => {\n    e.preventDefault();\n    fetch('http://localhost:9292/logout', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          setIsAuthenticated(false);\n          navigate('/');\n        } else {\n          throw new Error('Failed to logout');\n        }\n      })\n      .catch((error) => console.error(error));\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:9292/memes')\n      .then((response) => response.json())\n      .then((data) => {\n        setMemes(data.memes);\n        setUserMemes(data.user_memes);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  function handleDeleteMemes(id) {\n    const updatedMemes = userMemes.filter((meme) => meme.id !== id);\n    console.log('delete message');\n    setUserMemes(updatedMemes);\n  }\n\n  function handleAddMemes(newUserMeme) {\n    setUserMemes([...userMemes, newUserMeme]);\n  }\n\n  function handleUpdateMeme(updatedMemeObj) {\n    const updatedMemes = userMemes.map((meme) => {\n      if (meme.id === updatedMemeObj.id) {\n        return updatedMemeObj;\n      } else {\n        return meme;\n      }\n    });\n    setUserMemes(updatedMemes);\n  }\n\n  return (\n    <div className=\"bg-gray-600 h-screen\">\n      <Navbar isAuthenticated={isAuthenticated} handleLogout={handleLogout} username={username} />\n\n      <Routes>\n        <Route path=\"/\" element={<Home setIsAuthenticated={setIsAuthenticated} handleLogin={handleLogin} />} />\n        <Route path=\"/signup\" element={<Signup setIsAuthenticated={setIsAuthenticated} />} />\n        {isAuthenticated && (\n          <>\n            <Route path=\"/shelf\" element={<Usermeme />} />\n            <Route path=\"/allmemes\" element={<Memes memes={memes}/>} />\n            <Route path=\"/mymemes\" element={<Usermemes userMemes={userMemes}\n                                                handleDeleteMemes={handleDeleteMemes}\n                                                handleAddMemes={handleAddMemes} \n                                                handleUpdateMeme={handleUpdateMeme}\n              />} />\n            </>\n           )}\n        </Routes>\n   </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}