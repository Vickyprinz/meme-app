{"ast":null,"code":"var _jsxFileName = \"/home/victor/phase-3/memeapp/client/src/components/MemeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemeGenerator(_ref) {\n  _s();\n  let {\n    memes\n  } = _ref;\n  const [selectedMeme, setSelectedMeme] = useState(null);\n  const [text, setText] = useState('');\n  const [generatedMeme, setGeneratedMeme] = useState(null);\n  const handleMemeSelect = event => {\n    const id = event.target.value;\n    const meme = memes.find(meme => meme.id === id);\n    setSelectedMeme(meme);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const options = {\n      method: 'GET',\n      url: 'https://ronreiter-meme-generator.p.rapidapi.com/meme',\n      params: {\n        top: text,\n        bottom: text,\n        meme: selectedMeme.name,\n        font_size: '50',\n        font: 'Impact'\n      },\n      headers: {\n        'X-RapidAPI-Key': 'SIGN-UP-FOR-KEY',\n        'X-RapidAPI-Host': 'ronreiter-meme-generator.p.rapidapi.com'\n      }\n    };\n    try {\n      const response = await axios.request(options);\n      setGeneratedMeme(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleMemeSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), memes.map(meme => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: meme.id,\n          children: meme.name\n        }, meme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter top text\",\n        value: text,\n        onChange: event => setText(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !selectedMeme,\n        children: \"Generate Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), generatedMeme && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: generatedMeme,\n        alt: \"Generated Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(MemeGenerator, \"q88nF4rM9I5cRAQLvN08UYwivVQ=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MemeGenerator","_ref","_s","memes","selectedMeme","setSelectedMeme","text","setText","generatedMeme","setGeneratedMeme","handleMemeSelect","event","id","target","value","meme","find","handleSubmit","preventDefault","options","method","url","params","top","bottom","name","font_size","font","headers","response","request","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","map","type","placeholder","disabled","src","alt","_c","$RefreshReg$"],"sources":["/home/victor/phase-3/memeapp/client/src/components/MemeGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction MemeGenerator({ memes }) {\n  const [selectedMeme, setSelectedMeme] = useState(null);\n  const [text, setText] = useState('');\n  const [generatedMeme, setGeneratedMeme] = useState(null);\n\n  const handleMemeSelect = (event) => {\n    const id = event.target.value;\n    const meme = memes.find((meme) => meme.id === id);\n    setSelectedMeme(meme);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const options = {\n      method: 'GET',\n      url: 'https://ronreiter-meme-generator.p.rapidapi.com/meme',\n      params: {\n        top: text,\n        bottom: text,\n        meme: selectedMeme.name,\n        font_size: '50',\n        font: 'Impact'\n      },\n      headers: {\n        'X-RapidAPI-Key': 'SIGN-UP-FOR-KEY',\n        'X-RapidAPI-Host': 'ronreiter-meme-generator.p.rapidapi.com'\n      }\n    };\n\n    try {\n      const response = await axios.request(options);\n      setGeneratedMeme(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Meme Generator</h2>\n      <form onSubmit={handleSubmit}>\n        <select onChange={handleMemeSelect}>\n          <option value=\"\">Select a meme</option>\n          {memes.map((meme) => (\n            <option key={meme.id} value={meme.id}>\n              {meme.name}\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"text\"\n          placeholder=\"Enter top text\"\n          value={text}\n          onChange={(event) => setText(event.target.value)}\n        />\n        <button type=\"submit\" disabled={!selectedMeme}>\n          Generate Meme\n        </button>\n      </form>\n      {generatedMeme && (\n        <div>\n          <img src={generatedMeme} alt=\"Generated Meme\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MemeGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAX;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMc,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAC7B,MAAMC,IAAI,GAAGZ,KAAK,CAACa,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;IACjDP,eAAe,CAACU,IAAI,CAAC;EACvB,CAAC;EAED,MAAME,YAAY,GAAG,MAAON,KAAK,IAAK;IACpCA,KAAK,CAACO,cAAc,EAAE;IACtB,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,sDAAsD;MAC3DC,MAAM,EAAE;QACNC,GAAG,EAAEjB,IAAI;QACTkB,MAAM,EAAElB,IAAI;QACZS,IAAI,EAAEX,YAAY,CAACqB,IAAI;QACvBC,SAAS,EAAE,IAAI;QACfC,IAAI,EAAE;MACR,CAAC;MACDC,OAAO,EAAE;QACP,gBAAgB,EAAE,iBAAiB;QACnC,iBAAiB,EAAE;MACrB;IACF,CAAC;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,OAAO,CAACX,OAAO,CAAC;MAC7CV,gBAAgB,CAACoB,QAAQ,CAACE,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEjC,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAAmC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvBvC,OAAA;MAAMwC,QAAQ,EAAEtB,YAAa;MAAAiB,QAAA,gBAC3BnC,OAAA;QAAQyC,QAAQ,EAAE9B,gBAAiB;QAAAwB,QAAA,gBACjCnC,OAAA;UAAQe,KAAK,EAAC,EAAE;UAAAoB,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,EACtCnC,KAAK,CAACsC,GAAG,CAAE1B,IAAI,iBACdhB,OAAA;UAAsBe,KAAK,EAAEC,IAAI,CAACH,EAAG;UAAAsB,QAAA,EAClCnB,IAAI,CAACU;QAAI,GADCV,IAAI,CAACH,EAAE;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAGrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK,eACTvC,OAAA;QACE2C,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gBAAgB;QAC5B7B,KAAK,EAAER,IAAK;QACZkC,QAAQ,EAAG7B,KAAK,IAAKJ,OAAO,CAACI,KAAK,CAACE,MAAM,CAACC,KAAK;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjD,eACFvC,OAAA;QAAQ2C,IAAI,EAAC,QAAQ;QAACE,QAAQ,EAAE,CAACxC,YAAa;QAAA8B,QAAA,EAAC;MAE/C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,EACN9B,aAAa,iBACZT,OAAA;MAAAmC,QAAA,eACEnC,OAAA;QAAK8C,GAAG,EAAErC,aAAc;QAACsC,GAAG,EAAC;MAAgB;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEnD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAACpC,EAAA,CAlEQF,aAAa;AAAA+C,EAAA,GAAb/C,aAAa;AAoEtB,eAAeA,aAAa;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}