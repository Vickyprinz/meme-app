{"ast":null,"code":"var _jsxFileName = \"/home/victor/phase-3/memeapp/client/src/components/Home.js\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Memes = _ref => {\n  let {\n    memes,\n    handleSearchChange\n  } = _ref;\n  const allMemes = memes.map(meme => {\n    const created = new Date(meme.created_at);\n    const now = new Date();\n    const diffInMs = now.getTime() - created.getTime();\n    let formattedDate;\n    if (diffInMs < 1000 * 60 * 60) {\n      const diffInMin = Math.floor(diffInMs / (1000 * 60));\n      formattedDate = `${diffInMin} min ago`;\n    } else if (diffInMs < 1000 * 60 * 60 * 24) {\n      const diffInHrs = Math.floor(diffInMs / (1000 * 60 * 60));\n      formattedDate = `${diffInHrs} hrs ago`;\n    } else {\n      const diffInDays = Math.floor(diffInMs / (1000 * 3600 * 24));\n      formattedDate = `${diffInDays} days ago`;\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white bg-slate-100 p-2 mt-5 border w-2/4 ml-80 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between border mb-1 md:border-slate-300 md:border-b-1 md:border-t-0 md:border-r-0 md:border-l-0\",\n        children: [meme.user && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mr-4 text-teal-500 font-bold\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-orange-600\",\n            children: \"created by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), \" \", meme.user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 mb-0\",\n          children: formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-900 font-bold\",\n          children: [\"\\\"\", meme.title, \"\\\" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-900 font-bold\",\n          children: [\"\\\"\", meme.message, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, meme.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleSearchChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-10 pb-20\",\n      children: allMemes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = Memes;\nexport default Memes;\nvar _c;\n$RefreshReg$(_c, \"Memes\");","map":{"version":3,"names":["Search","jsxDEV","_jsxDEV","Memes","_ref","memes","handleSearchChange","allMemes","map","meme","created","Date","created_at","now","diffInMs","getTime","formattedDate","diffInMin","Math","floor","diffInHrs","diffInDays","className","children","user","fileName","_jsxFileName","lineNumber","columnNumber","username","title","message","id","_c","$RefreshReg$"],"sources":["/home/victor/phase-3/memeapp/client/src/components/Home.js"],"sourcesContent":["import Search from \"./Search\";\n\nconst Memes = ({ memes, handleSearchChange }) => {\n  const allMemes = memes.map((meme) => {\n    const created = new Date(meme.created_at);\n    const now = new Date();\n    const diffInMs = now.getTime() - created.getTime();\n    let formattedDate;\n    if (diffInMs < 1000 * 60 * 60) {\n      const diffInMin = Math.floor(diffInMs / (1000 * 60));\n      formattedDate = `${diffInMin} min ago`;\n    } else if (diffInMs < 1000 * 60 * 60 * 24) {\n      const diffInHrs = Math.floor(diffInMs / (1000 * 60 * 60));\n      formattedDate = `${diffInHrs} hrs ago`;\n    } else {\n      const diffInDays = Math.floor(diffInMs / (1000 * 3600 * 24));\n      formattedDate = `${diffInDays} days ago`;\n    }\n\n    return (\n      <div key={meme.id} className=\"text-white bg-slate-100 p-2 mt-5 border w-2/4 ml-80 rounded-lg shadow\">\n        <div className=\"flex justify-between border mb-1 md:border-slate-300 md:border-b-1 md:border-t-0 md:border-r-0 md:border-l-0\">\n          {meme.user && (\n            <p className=\"mr-4 text-teal-500 font-bold\">\n              <span className=\"text-orange-600\">created by:</span> {meme.user.username}\n            </p>\n          )}\n          <p className=\"text-gray-500 mb-0\">{formattedDate}</p>\n        </div>\n        <p className=\"\">\n          <span className=\"text-gray-900 font-bold\">\"{meme.title}\" </span>\n        </p>\n        <p className=\"\">\n          <span className=\"text-gray-900 font-bold\">\"{meme.message}\"</span>\n        </p>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <Search handleSearchChange={handleSearchChange} />\n      <div className=\"mt-10 pb-20\">{allMemes}</div>\n    </div>\n  );\n};\n\nexport default Memes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}